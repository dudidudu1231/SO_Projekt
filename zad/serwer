#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <errno.h>

#define klientserwer 123
#define M_DANE 1
#define M_KONIEC 2
#define M_WYNIK 3

struct message {
    long mtype;
    int wartosc;
};

int main() {
    // Create message queue
    key_t key = ftok(".", klientserwer);
    if (key == -1) {
        perror("ftok error");
        exit(1);
    }

    int msqid = msgget(key, IPC_CREAT | 0666);
    if (msqid == -1) {
        perror("msgget error");
        exit(1);
    }

    struct message msg;
    int sum = 0;
    int running = 1;

    while (running) {
        // Receive message
        if (msgrcv(msqid, &msg, sizeof(int), -M_KONIEC, 0) == -1) {
            perror("msgrcv error");
            exit(1);
        }

        if (msg.mtype == M_DANE) {
            printf("Odczytano komunikat M_DANE o wartosci: %d\n", msg.wartosc);
            sum += msg.wartosc;
        } else if (msg.mtype == M_KONIEC) {
            printf("Odczytano komunikat M_KONIEC o wartosci: %d\n", msg.wartosc);
            sum += msg.wartosc;
            running = 0;
        }
    }

    // Send result
    msg.mtype = M_WYNIK;
    msg.wartosc = sum;
    printf("Wyslano komunikat M_WYNIK: %d\n", sum);

    if (msgsnd(msqid, &msg, sizeof(int), 0) == -1) {
        perror("msgsnd error");
        exit(1);
    }

    // Clean up message queue
    if (msgctl(msqid, IPC_RMID, NULL) == -1) {
        perror("msgctl error");
        exit(1);
    }

    return 0;
}
