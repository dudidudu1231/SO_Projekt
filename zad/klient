#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <errno.h>

#define klientserwer 123
#define M_DANE 1
#define M_KONIEC 2
#define M_WYNIK 3

struct message {
    long mtype;
    int wartosc;
};

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s <number_count>\n", argv[0]);
        exit(1);
    }

    int count = atoi(argv[1]);
    if (count <= 0) {
        printf("Number count must be positive\n");
        exit(1);
    }

    // Create or get message queue
    key_t key = ftok(".", klientserwer);
    if (key == -1) {
        perror("ftok error");
        exit(1);
    }

    int msqid = msgget(key, 0666);
    if (msqid == -1) {
        perror("msgget error");
        exit(1);
    }

    struct message msg;
    int i;

    // Send numbers
    for (i = 0; i < count - 1; i++) {
        printf("Podaj %d. liczbe: ", i + 1);
        scanf("%d", &msg.wartosc);
        msg.mtype = M_DANE;

        if (msgsnd(msqid, &msg, sizeof(int), 0) == -1) {
            perror("msgsnd error");
            exit(1);
        }
    }

    // Send last number with M_KONIEC
    printf("Podaj %d. liczbe: ", count);
    scanf("%d", &msg.wartosc);
    msg.mtype = M_KONIEC;

    if (msgsnd(msqid, &msg, sizeof(int), 0) == -1) {
        perror("msgsnd error");
        exit(1);
    }

    // Receive result
    if (msgrcv(msqid, &msg, sizeof(int), M_WYNIK, 0) == -1) {
        perror("msgrcv error");
        exit(1);
    }

    printf("Otrzymano wynik: %d\n", msg.wartosc);

    return 0;
}
